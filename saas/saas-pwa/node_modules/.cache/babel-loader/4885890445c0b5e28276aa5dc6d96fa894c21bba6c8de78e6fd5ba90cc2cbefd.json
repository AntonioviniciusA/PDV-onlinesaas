{"ast":null,"code":"import { apiAuth } from \"./conection.js\";\nconst AssinaturaService = {\n  // Realiza o pagamento (assinatura, boleto, pix, etc)\n  async assinar(body) {\n    try {\n      const response = await apiAuth.post(\"/assinaturas/create\", body);\n      console.log(\"Resposta da API (assinaturas):\", response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error(\"Erro ao processar assinatura:\", error);\n      console.error(\"Detalhes do erro:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      throw error;\n    }\n  },\n  async listarAssinaturas() {\n    try {\n      const response = await apiAuth.get(\"/assinaturas/assinaturas\");\n      console.log(\"Resposta da API (assinaturas):\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erro ao listar assinaturas:\", error);\n      throw error;\n    }\n  },\n  // Buscar status do pagamento por ID\n  async getStatusPagamento(paymentId) {\n    try {\n      const response = await apiAuth.get(`/assinaturas/status/${paymentId}`);\n      console.log(\"Status da assinatura:\", response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Erro ao buscar status da assinatura:\", error);\n      console.error(\"Detalhes do erro:\", (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      throw error;\n    }\n  },\n  async cancelarAssinatura(id) {\n    try {\n      const response = await apiAuth.post(`/assinaturas/cancel/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erro ao cancelar assinatura:\", error);\n      throw error;\n    }\n  }\n};\nexport { AssinaturaService };","map":{"version":3,"names":["apiAuth","AssinaturaService","assinar","body","response","post","console","log","data","error","_error$response","listarAssinaturas","get","getStatusPagamento","paymentId","_error$response2","cancelarAssinatura","id"],"sources":["/home/v/Documentos/Github/PDV-onlinesaas/saas/saas-pwa/src/services/assinaturaService.js"],"sourcesContent":["import { apiAuth } from \"./conection.js\";\n\nconst AssinaturaService = {\n  // Realiza o pagamento (assinatura, boleto, pix, etc)\n  async assinar(body) {\n    try {\n      const response = await apiAuth.post(\"/assinaturas/create\", body);\n      console.log(\"Resposta da API (assinaturas):\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erro ao processar assinatura:\", error);\n      console.error(\"Detalhes do erro:\", error.response?.data);\n      throw error;\n    }\n  },\n  async listarAssinaturas() {\n    try {\n      const response = await apiAuth.get(\"/assinaturas/assinaturas\");\n      console.log(\"Resposta da API (assinaturas):\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erro ao listar assinaturas:\", error);\n      throw error;\n    }\n  },\n\n  // Buscar status do pagamento por ID\n  async getStatusPagamento(paymentId) {\n    try {\n      const response = await apiAuth.get(`/assinaturas/status/${paymentId}`);\n      console.log(\"Status da assinatura:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erro ao buscar status da assinatura:\", error);\n      console.error(\"Detalhes do erro:\", error.response?.data);\n      throw error;\n    }\n  },\n  async cancelarAssinatura(id) {\n    try {\n      const response = await apiAuth.post(`/assinaturas/cancel/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Erro ao cancelar assinatura:\", error);\n      throw error;\n    }\n  },\n};\n\nexport { AssinaturaService };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,gBAAgB;AAExC,MAAMC,iBAAiB,GAAG;EACxB;EACA,MAAMC,OAAOA,CAACC,IAAI,EAAE;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAC,qBAAqB,EAAEF,IAAI,CAAC;MAChEG,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC5D,OAAOJ,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdJ,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDH,OAAO,CAACG,KAAK,CAAC,mBAAmB,GAAAC,eAAA,GAAED,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,CAAC;MACxD,MAAMC,KAAK;IACb;EACF,CAAC;EACD,MAAME,iBAAiBA,CAAA,EAAG;IACxB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMJ,OAAO,CAACY,GAAG,CAAC,0BAA0B,CAAC;MAC9DN,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC5D,OAAOJ,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMI,kBAAkBA,CAACC,SAAS,EAAE;IAClC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMJ,OAAO,CAACY,GAAG,CAAC,uBAAuBE,SAAS,EAAE,CAAC;MACtER,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MACnD,OAAOJ,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAM,gBAAA;MACdT,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DH,OAAO,CAACG,KAAK,CAAC,mBAAmB,GAAAM,gBAAA,GAAEN,KAAK,CAACL,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,CAAC;MACxD,MAAMC,KAAK;IACb;EACF,CAAC;EACD,MAAMO,kBAAkBA,CAACC,EAAE,EAAE;IAC3B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAC,uBAAuBY,EAAE,EAAE,CAAC;MAChE,OAAOb,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,SAASR,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}