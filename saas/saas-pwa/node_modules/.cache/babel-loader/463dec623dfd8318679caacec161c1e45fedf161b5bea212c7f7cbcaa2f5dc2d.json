{"ast":null,"code":"\"use client\";\n\nvar _s = $RefreshSig$();\nimport { useEffect, useCallback } from \"react\";\nexport function useKeyboardShortcuts(shortcuts) {\n  _s();\n  const handleKeyPress = useCallback(event => {\n    // Não executar atalhos se estiver digitando em um input\n    if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) {\n      return;\n    }\n    const shortcut = shortcuts.find(s => s.key.toLowerCase() === event.key.toLowerCase() && !!s.ctrlKey === event.ctrlKey && !!s.altKey === event.altKey && !!s.shiftKey === event.shiftKey);\n    if (shortcut) {\n      event.preventDefault();\n      shortcut.action();\n    }\n  }, [shortcuts]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [handleKeyPress]);\n  return shortcuts;\n}\n_s(useKeyboardShortcuts, \"1e59yZrpyYyXJCGE3uS7i+yBtNw=\");","map":{"version":3,"names":["_s","$RefreshSig$","useEffect","useCallback","useKeyboardShortcuts","shortcuts","handleKeyPress","event","target","HTMLInputElement","HTMLTextAreaElement","shortcut","find","s","key","toLowerCase","ctrlKey","altKey","shiftKey","preventDefault","action","document","addEventListener","removeEventListener"],"sources":["/home/v/Documentos/Github/PDV-onlinesaas/pdv-react-pwa/src/hooks/use-keyboard-shortcuts.js"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useCallback } from \"react\"\n\n\nexport function useKeyboardShortcuts(shortcuts: KeyboardShortcut[]) {\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent) => {\n      // Não executar atalhos se estiver digitando em um input\n      if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) {\n        return\n      }\n\n      const shortcut = shortcuts.find(\n        (s) =>\n          s.key.toLowerCase() === event.key.toLowerCase() &&\n          !!s.ctrlKey === event.ctrlKey &&\n          !!s.altKey === event.altKey &&\n          !!s.shiftKey === event.shiftKey,\n      )\n\n      if (shortcut) {\n        event.preventDefault()\n        shortcut.action()\n      }\n    },\n    [shortcuts],\n  )\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress)\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress)\n    }\n  }, [handleKeyPress])\n\n  return shortcuts\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,EAAA,GAAAC,YAAA;AAEZ,SAASC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAG9C,OAAO,SAASC,oBAAoBA,CAACC,SAA6B,EAAE;EAAAL,EAAA;EAClE,MAAMM,cAAc,GAAGH,WAAW,CAC/BI,KAAoB,IAAK;IACxB;IACA,IAAIA,KAAK,CAACC,MAAM,YAAYC,gBAAgB,IAAIF,KAAK,CAACC,MAAM,YAAYE,mBAAmB,EAAE;MAC3F;IACF;IAEA,MAAMC,QAAQ,GAAGN,SAAS,CAACO,IAAI,CAC5BC,CAAC,IACAA,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,KAAKR,KAAK,CAACO,GAAG,CAACC,WAAW,CAAC,CAAC,IAC/C,CAAC,CAACF,CAAC,CAACG,OAAO,KAAKT,KAAK,CAACS,OAAO,IAC7B,CAAC,CAACH,CAAC,CAACI,MAAM,KAAKV,KAAK,CAACU,MAAM,IAC3B,CAAC,CAACJ,CAAC,CAACK,QAAQ,KAAKX,KAAK,CAACW,QAC3B,CAAC;IAED,IAAIP,QAAQ,EAAE;MACZJ,KAAK,CAACY,cAAc,CAAC,CAAC;MACtBR,QAAQ,CAACS,MAAM,CAAC,CAAC;IACnB;EACF,CAAC,EACD,CAACf,SAAS,CACZ,CAAC;EAEDH,SAAS,CAAC,MAAM;IACdmB,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEhB,cAAc,CAAC;IACpD,OAAO,MAAM;MACXe,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEjB,cAAc,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,OAAOD,SAAS;AAClB;AAACL,EAAA,CAhCeI,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}