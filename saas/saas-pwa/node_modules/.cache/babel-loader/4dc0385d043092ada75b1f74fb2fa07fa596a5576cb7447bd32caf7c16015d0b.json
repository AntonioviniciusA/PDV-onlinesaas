{"ast":null,"code":"import { openDB } from \"idb\";\nconst DB_NAME = \"DominusPDV\";\nconst STORE_NAME = \"cupons\";\nexport async function salvarCupomOffline(cupom) {\n  try {\n    const db = await openDB(DB_NAME, 1, {\n      upgrade(db) {\n        if (!db.objectStoreNames.contains(STORE_NAME)) {\n          db.createObjectStore(STORE_NAME, {\n            keyPath: \"id\",\n            autoIncrement: true\n          });\n        }\n      }\n    });\n    const id = await db.add(STORE_NAME, {\n      ...cupom,\n      timestamp: new Date().toISOString(),\n      status: \"pendente\"\n    });\n    console.log(\"Cupom salvo offline com ID:\", id);\n    return id;\n  } catch (error) {\n    console.error(\"Erro ao salvar cupom offline:\", error);\n    throw error;\n  }\n}\nexport async function recuperarCuponsOffline() {\n  try {\n    const db = await openDB(DB_NAME, 1);\n    return await db.getAll(STORE_NAME);\n  } catch (error) {\n    console.error(\"Erro ao recuperar cupons offline:\", error);\n    return [];\n  }\n}\nexport async function limparCuponsOffline() {\n  try {\n    const db = await openDB(DB_NAME, 1);\n    await db.clear(STORE_NAME);\n    console.log(\"Cupons offline limpos com sucesso\");\n  } catch (error) {\n    console.error(\"Erro ao limpar cupons offline:\", error);\n    throw error;\n  }\n}\nexport async function removerCupomOffline(id) {\n  try {\n    const db = await openDB(DB_NAME, 1);\n    await db.delete(STORE_NAME, id);\n    console.log(\"Cupom removido do cache offline:\", id);\n  } catch (error) {\n    console.error(\"Erro ao remover cupom offline:\", error);\n    throw error;\n  }\n}\nexport async function contarCuponsOffline() {\n  try {\n    const db = await openDB(DB_NAME, 1);\n    return await db.count(STORE_NAME);\n  } catch (error) {\n    console.error(\"Erro ao contar cupons offline:\", error);\n    return 0;\n  }\n}","map":{"version":3,"names":["openDB","DB_NAME","STORE_NAME","salvarCupomOffline","cupom","db","upgrade","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","id","add","timestamp","Date","toISOString","status","console","log","error","recuperarCuponsOffline","getAll","limparCuponsOffline","clear","removerCupomOffline","delete","contarCuponsOffline","count"],"sources":["/home/v/Documentos/Github/PDV-onlinesaas/pdv-react-pwa/src/utils/cupomStorage.js"],"sourcesContent":["import { openDB } from \"idb\";\n\nconst DB_NAME = \"DominusPDV\";\nconst STORE_NAME = \"cupons\";\n\nexport async function salvarCupomOffline(cupom) {\n  try {\n    const db = await openDB(DB_NAME, 1, {\n      upgrade(db) {\n        if (!db.objectStoreNames.contains(STORE_NAME)) {\n          db.createObjectStore(STORE_NAME, {\n            keyPath: \"id\",\n            autoIncrement: true,\n          });\n        }\n      },\n    });\n\n    const id = await db.add(STORE_NAME, {\n      ...cupom,\n      timestamp: new Date().toISOString(),\n      status: \"pendente\",\n    });\n\n    console.log(\"Cupom salvo offline com ID:\", id);\n    return id;\n  } catch (error) {\n    console.error(\"Erro ao salvar cupom offline:\", error);\n    throw error;\n  }\n}\n\nexport async function recuperarCuponsOffline() {\n  try {\n    const db = await openDB(DB_NAME, 1);\n    return await db.getAll(STORE_NAME);\n  } catch (error) {\n    console.error(\"Erro ao recuperar cupons offline:\", error);\n    return [];\n  }\n}\n\nexport async function limparCuponsOffline() {\n  try {\n    const db = await openDB(DB_NAME, 1);\n    await db.clear(STORE_NAME);\n    console.log(\"Cupons offline limpos com sucesso\");\n  } catch (error) {\n    console.error(\"Erro ao limpar cupons offline:\", error);\n    throw error;\n  }\n}\n\nexport async function removerCupomOffline(id) {\n  try {\n    const db = await openDB(DB_NAME, 1);\n    await db.delete(STORE_NAME, id);\n    console.log(\"Cupom removido do cache offline:\", id);\n  } catch (error) {\n    console.error(\"Erro ao remover cupom offline:\", error);\n    throw error;\n  }\n}\n\nexport async function contarCuponsOffline() {\n  try {\n    const db = await openDB(DB_NAME, 1);\n    return await db.count(STORE_NAME);\n  } catch (error) {\n    console.error(\"Erro ao contar cupons offline:\", error);\n    return 0;\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,KAAK;AAE5B,MAAMC,OAAO,GAAG,YAAY;AAC5B,MAAMC,UAAU,GAAG,QAAQ;AAE3B,OAAO,eAAeC,kBAAkBA,CAACC,KAAK,EAAE;EAC9C,IAAI;IACF,MAAMC,EAAE,GAAG,MAAML,MAAM,CAACC,OAAO,EAAE,CAAC,EAAE;MAClCK,OAAOA,CAACD,EAAE,EAAE;QACV,IAAI,CAACA,EAAE,CAACE,gBAAgB,CAACC,QAAQ,CAACN,UAAU,CAAC,EAAE;UAC7CG,EAAE,CAACI,iBAAiB,CAACP,UAAU,EAAE;YAC/BQ,OAAO,EAAE,IAAI;YACbC,aAAa,EAAE;UACjB,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;IAEF,MAAMC,EAAE,GAAG,MAAMP,EAAE,CAACQ,GAAG,CAACX,UAAU,EAAE;MAClC,GAAGE,KAAK;MACRU,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEP,EAAE,CAAC;IAC9C,OAAOA,EAAE;EACX,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeC,sBAAsBA,CAAA,EAAG;EAC7C,IAAI;IACF,MAAMhB,EAAE,GAAG,MAAML,MAAM,CAACC,OAAO,EAAE,CAAC,CAAC;IACnC,OAAO,MAAMI,EAAE,CAACiB,MAAM,CAACpB,UAAU,CAAC;EACpC,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO,EAAE;EACX;AACF;AAEA,OAAO,eAAeG,mBAAmBA,CAAA,EAAG;EAC1C,IAAI;IACF,MAAMlB,EAAE,GAAG,MAAML,MAAM,CAACC,OAAO,EAAE,CAAC,CAAC;IACnC,MAAMI,EAAE,CAACmB,KAAK,CAACtB,UAAU,CAAC;IAC1BgB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeK,mBAAmBA,CAACb,EAAE,EAAE;EAC5C,IAAI;IACF,MAAMP,EAAE,GAAG,MAAML,MAAM,CAACC,OAAO,EAAE,CAAC,CAAC;IACnC,MAAMI,EAAE,CAACqB,MAAM,CAACxB,UAAU,EAAEU,EAAE,CAAC;IAC/BM,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEP,EAAE,CAAC;EACrD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeO,mBAAmBA,CAAA,EAAG;EAC1C,IAAI;IACF,MAAMtB,EAAE,GAAG,MAAML,MAAM,CAACC,OAAO,EAAE,CAAC,CAAC;IACnC,OAAO,MAAMI,EAAE,CAACuB,KAAK,CAAC1B,UAAU,CAAC;EACnC,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,CAAC;EACV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}