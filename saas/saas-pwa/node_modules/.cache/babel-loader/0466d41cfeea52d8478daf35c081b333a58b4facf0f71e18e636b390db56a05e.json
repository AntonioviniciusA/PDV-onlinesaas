{"ast":null,"code":"import { apiAuth } from \"./conection\";\nexport const profileService = {\n  getClienteProfile: async () => {\n    try {\n      const response = await apiAuth.get(\"/cliente/profile\");\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error(\"Erro ao buscar perfil do cliente:\", (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw new Error(\"Não foi possível carregar o perfil do cliente.\");\n    }\n  },\n  getParceiroProfile: async () => {\n    try {\n      const response = await apiAuth.get(\"/parceiro-saas/profile\");\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Erro ao buscar perfil do parceiro:\", (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw new Error(\"Não foi possível carregar o perfil do parceiro.\");\n    }\n  }\n};","map":{"version":3,"names":["apiAuth","profileService","getClienteProfile","response","get","data","error","_error$response","console","message","Error","getParceiroProfile","_error$response2"],"sources":["/home/v/Documentos/Github/PDV-onlinesaas/saas/saas-pwa/src/services/profileService.js"],"sourcesContent":["import { apiAuth } from \"./conection\";\nexport const profileService = {\n  getClienteProfile: async () => {\n    try {\n      const response = await apiAuth.get(\"/cliente/profile\");\n      return response.data;\n    } catch (error) {\n      console.error(\n        \"Erro ao buscar perfil do cliente:\",\n        error?.response?.data || error.message\n      );\n      throw new Error(\"Não foi possível carregar o perfil do cliente.\");\n    }\n  },\n\n  getParceiroProfile: async () => {\n    try {\n      const response = await apiAuth.get(\"/parceiro-saas/profile\");\n      return response.data;\n    } catch (error) {\n      console.error(\n        \"Erro ao buscar perfil do parceiro:\",\n        error?.response?.data || error.message\n      );\n      throw new Error(\"Não foi possível carregar o perfil do parceiro.\");\n    }\n  },\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,OAAO,MAAMC,cAAc,GAAG;EAC5BC,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAG,CAAC,kBAAkB,CAAC;MACtD,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CACX,mCAAmC,EACnC,CAAAA,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEH,QAAQ,cAAAI,eAAA,uBAAfA,eAAA,CAAiBF,IAAI,KAAIC,KAAK,CAACG,OACjC,CAAC;MACD,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;IACnE;EACF,CAAC;EAEDC,kBAAkB,EAAE,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAG,CAAC,wBAAwB,CAAC;MAC5D,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAM,gBAAA;MACdJ,OAAO,CAACF,KAAK,CACX,oCAAoC,EACpC,CAAAA,KAAK,aAALA,KAAK,wBAAAM,gBAAA,GAALN,KAAK,CAAEH,QAAQ,cAAAS,gBAAA,uBAAfA,gBAAA,CAAiBP,IAAI,KAAIC,KAAK,CAACG,OACjC,CAAC;MACD,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;IACpE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}