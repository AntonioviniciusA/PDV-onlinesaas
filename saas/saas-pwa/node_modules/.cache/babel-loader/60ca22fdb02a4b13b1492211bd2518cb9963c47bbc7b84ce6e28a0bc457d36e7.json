{"ast":null,"code":"import axios from \"axios\";\n\n// URL base da API\nconst BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:3000\";\n\n// Instância do Axios\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  },\n  withCredentials: false\n});\n\n// Interceptor de requisição: adiciona token se existir\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Interceptor de resposta: trata erros como 401\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  const status = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status;\n  if (status === 401) {\n    localStorage.removeItem(\"token\");\n    window.location.assign(\"/login\");\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","Accept","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","assign"],"sources":["/home/v/Documentos/Github/PDV-onlinesaas/pdv-react-pwa/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// URL base da API\nconst BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:3000\";\n\n// Instância do Axios\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n  withCredentials: false,\n});\n\n// Interceptor de requisição: adiciona token se existir\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Interceptor de resposta: trata erros como 401\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const status = error.response?.status;\n\n    if (status === 401) {\n      localStorage.removeItem(\"token\");\n      window.location.assign(\"/login\");\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAEzE;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,QAAQ;EACjBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE;EACV,CAAC;EACDC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACN,OAAO,CAACU,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAf,GAAG,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,MAAMC,MAAM,IAAAD,eAAA,GAAGJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM;EAErC,IAAIA,MAAM,KAAK,GAAG,EAAE;IAClBR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,QAAQ,CAAC;EAClC;EAEA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}