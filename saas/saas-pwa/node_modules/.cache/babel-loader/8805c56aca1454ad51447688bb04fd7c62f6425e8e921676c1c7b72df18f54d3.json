{"ast":null,"code":"import api from \"./api\";\nexport const plansService = {\n  // Buscar todos os planos\n  async getAllPlans() {\n    try {\n      const response = await api.get(\"/plans\");\n      return response.data.data || [];\n    } catch (error) {\n      console.error(\"Erro ao buscar planos:\", error);\n      throw error;\n    }\n  },\n  // Buscar planos por ciclo de cobrança\n  async getPlansByBillingCycle(billingCycle) {\n    try {\n      const response = await api.get(`/plans?billing_cycle=${billingCycle}`);\n      return response.data.data || [];\n    } catch (error) {\n      console.error(`Erro ao buscar planos ${billingCycle}:`, error);\n      throw error;\n    }\n  },\n  // Buscar planos mensais\n  async getMonthlyPlans() {\n    return this.getPlansByBillingCycle(\"monthly\");\n  },\n  // Buscar planos anuais\n  async getAnnuallyPlans() {\n    return this.getPlansByBillingCycle(\"yearly\");\n  },\n  // Buscar plano por ID\n  async getPlanById(id) {\n    try {\n      const response = await api.get(`/plans/${id}`);\n      return response.data.data;\n    } catch (error) {\n      console.error(\"Erro ao buscar plano:\", error);\n      throw error;\n    }\n  }\n};\nexport default plansService;","map":{"version":3,"names":["api","plansService","getAllPlans","response","get","data","error","console","getPlansByBillingCycle","billingCycle","getMonthlyPlans","getAnnuallyPlans","getPlanById","id"],"sources":["/home/v/Documentos/Github/PDV-onlinesaas/pdv-react-pwa/src/services/plansService.js"],"sourcesContent":["import api from \"./api\";\n\nexport const plansService = {\n  // Buscar todos os planos\n  async getAllPlans() {\n    try {\n      const response = await api.get(\"/plans\");\n      return response.data.data || [];\n    } catch (error) {\n      console.error(\"Erro ao buscar planos:\", error);\n      throw error;\n    }\n  },\n\n  // Buscar planos por ciclo de cobrança\n  async getPlansByBillingCycle(billingCycle) {\n    try {\n      const response = await api.get(`/plans?billing_cycle=${billingCycle}`);\n      return response.data.data || [];\n    } catch (error) {\n      console.error(`Erro ao buscar planos ${billingCycle}:`, error);\n      throw error;\n    }\n  },\n\n  // Buscar planos mensais\n  async getMonthlyPlans() {\n    return this.getPlansByBillingCycle(\"monthly\");\n  },\n\n  // Buscar planos anuais\n  async getAnnuallyPlans() {\n    return this.getPlansByBillingCycle(\"yearly\");\n  },\n\n  // Buscar plano por ID\n  async getPlanById(id) {\n    try {\n      const response = await api.get(`/plans/${id}`);\n      return response.data.data;\n    } catch (error) {\n      console.error(\"Erro ao buscar plano:\", error);\n      throw error;\n    }\n  },\n};\n\nexport default plansService;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACA,MAAMC,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,QAAQ,CAAC;MACxC,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,sBAAsBA,CAACC,YAAY,EAAE;IACzC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,wBAAwBK,YAAY,EAAE,CAAC;MACtE,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyBG,YAAY,GAAG,EAAEH,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMI,eAAeA,CAAA,EAAG;IACtB,OAAO,IAAI,CAACF,sBAAsB,CAAC,SAAS,CAAC;EAC/C,CAAC;EAED;EACA,MAAMG,gBAAgBA,CAAA,EAAG;IACvB,OAAO,IAAI,CAACH,sBAAsB,CAAC,QAAQ,CAAC;EAC9C,CAAC;EAED;EACA,MAAMI,WAAWA,CAACC,EAAE,EAAE;IACpB,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,UAAUS,EAAE,EAAE,CAAC;MAC9C,OAAOV,QAAQ,CAACE,IAAI,CAACA,IAAI;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}